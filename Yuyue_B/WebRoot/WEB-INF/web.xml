<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- Spring配置 -->
	<!-- Location of the XML file that defines the root application context -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>web_backend2.0</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>
	<filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>    
    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<!-- 字符编码 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			com.deying.util.core.com.framework.common.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>authority-filter</filter-name>
		<filter-class>
			com.deying.util.Filter.AuthorityFilter
		</filter-class>
	</filter>
	
	<filter>
        <filter-name>struts-prepare</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
    </filter>
    
     <filter>
       <filter-name>sitemesh</filter-name>
       <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
   	</filter>

    <filter>
        <filter-name>struts-execute</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
    </filter>
  
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>authority-filter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>authority-filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>authority-filter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>authority-filter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

    <filter-mapping>
        <filter-name>struts-prepare</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>struts-execute</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>
			org.directwebremoting.servlet.DwrServlet
		</servlet-class>

		<init-param>
			<param-name>fileUploadMaxBytes</param-name>
			<param-value>25000</param-value>
		</init-param>

		<!-- This should NEVER be present in live -->
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>

		<init-param>
			<param-name>accessLogLevel</param-name>
			<param-value>runtimeexception</param-value>
		</init-param>

		<init-param>
			<param-name>activeReverseAjaxEnabled</param-name>
			<param-value>true</param-value>
		</init-param>

		<!-- By default DWR creates application scope objects when they are first
			used. This creates them when the app-server is started -->
		<init-param>
			<param-name>
				initApplicationScopeCreatorsAtStartup
			</param-name>
			<param-value>true</param-value>
		</init-param>


		<!--
			For more information on these parameters, see:
			- http://getahead.org/dwr/server/servlet
			- http://getahead.org/dwr/reverse-ajax/configuration
		-->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<!-- Welcome -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- Error Page -->
	<!-- 内部服务器错误  -->
	<error-page>
		<error-code>500</error-code>
		<location>/500.jsp</location>
	</error-page>
	<!-- 禁止访问 -->
	<error-page>
		<error-code>403</error-code>
		<location>/403.jsp</location>
	</error-page>
	<!-- 找不到页面 -->
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>

	<error-page>

		<exception-type>java.lang.Exception</exception-type>

		<location>/500.jsp</location>

	</error-page>

	<error-page>

		<exception-type>java.lang.Error</exception-type>

		<location>/500.jsp</location>

	</error-page>
	<!--验证码-->
	<servlet>
		<servlet-name>VerifyCodeServlet</servlet-name>
		<servlet-class>
			com.deying.util.verifycode.VerifyCodeServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>VerifyCodeServlet</servlet-name>
		<url-pattern>/servlet/VerifyCodeServlet</url-pattern>
	</servlet-mapping>
</web-app>
